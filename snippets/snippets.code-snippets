{
  "Kysely PostgresDialect": {
    "prefix": ["kysely_new_dialect_pg", "new PostgresDialect"],
    "scope": "javascript,typescript",
    "body": ["const dialect = new PostgresDialect({", "  pool: async () => new Pool({", "    user: ${1:user},", "    password: ${2:password},", "    host: ${3:host},", "    port: ${4:port},", "    database: ${5:database},", "  }),", "}),"]
  },
  "Kysely MysqlDialect": {
    "prefix": ["kysely_new_dialect_mysql", "new MysqlDialect"],
    "scope": "javascript,typescript",
    "body": ["const dialect = new MysqlDialect({", "  pool: async () => new createPool({", "    user: ${1:user},", "    password: ${2:password},", "    host: ${3:host},", "    port: ${4:port},", "    database: ${5:database},", "  }),", "}),"]
  },
  "Kysely MssqlDialect": {
    "prefix": ["kysely_new_dialect_mssql", "new MssqlDialect"],
    "scope": "javascript,typescript",
    "body": ["const dialect = new MssqlDialect({", "  tarn: {", "    ...tarn,", "    options: {", "      min: 0,", "      max: 10,", "    },", "  },", "  tedious: {", "    ...tedious,", "    connectionFactory: () => new tedious.Connection({", "      authentication: {", "        options: {", "          password: 'password',", "          userName: 'username',", "        },", "        type: 'default',", "      },", "      options: {", "        database: 'some_db',", "        port: 1433,", "        trustServerCertificate: true,", "      },", "      server: 'localhost',", "    }),", "  },", "}),"]
  },
  "Kysely SqliteDialect": {
    "prefix": ["kysely_new_dialect_sqlite", "new SqliteDialect"],
    "scope": "javascript,typescript",
    "body": ["const dialect = new SqliteDialect({", "  database: new SQLite('${1:storage}'),", "})"]
  },
  "Kysely new db": {
    "prefix": ["kysely_new_db", "new Database"],
    "scope": "javascript,typescript",
    "body": "const db = new Kysely<Database>({ dialect })"
  },
  "Kysely migrator": {
    "prefix": ["kysely_new_migrator", "new Migrator"],
    "scope": "javascript,typescript",
    "body": ["const migrator = new Migrator({", "  ${1:db},", "  provider: new FileMigrationProvider({", "    ${2:fs},", "    ${3:path},", "    migrationFolder: path.join(__dirname, '${4:migrations}'),", "  }),", "})"]
  },
  "Kysely id generated": {
    "prefix": ["kysely_id_generated", "Generated"],
    "scope": "javascript,typescript",
    "body": "id: Generated<number>"
  },
  "Kysely ColumnType": {
    "prefix": ["kysely_column_type", "ColumnType"],
    "scope": "javascript,typescript",
    "body": "id: ColumnType<{1:}>"
  },
  "Kysely selectable": {
    "prefix": ["kysely_selectable", "Selectable"],
    "scope": "javascript,typescript",
    "body": "export type ${1:SelectableName} = Selectable<${2:TableName}>"
  },
  "Kysely insertable": {
    "prefix": ["kysely_insertable", "Insertable"],
    "scope": "javascript,typescript",
    "body": "export type ${1:InsertableName} = Insertable<${2:TableName}>"
  },
  "Kysely updateable": {
    "prefix": ["kysely_updateable", "Updateable"],
    "scope": "javascript,typescript",
    "body": "export type ${1:UpdateableName} = Updateable<${2:TableName}>"
  },
  "Kysely create table": {
    "prefix": ["kysely_create_table", "createTable"],
    "scope": "javascript,typescript",
    "body": ["await db.schema", "  .createTable('${1:table}')", "  .addColumn('${2:column}', '${3:type}', (col) =>", "    col.${4:primaryKey}().${5:defaultTo}(sql`${6:gen_random_uuid()}`)", "  )", "  .execute()"]
  },
  "Kysely create index": {
    "prefix": ["kysely_create_index", "createIndex"],
    "scope": "javascript,typescript",
    "body": ["await db.schema", "  .createIndex('${1:index}')", "  .on('${2:table}')", "  .column('${3:column}')", "  .execute()"]
  },
  "Kysely insert into": {
    "prefix": ["kysely_insert_into", "insertInto"],
    "scope": "javascript,typescript",
    "body": ["await db", "  .insertInto('${1:table}')", "  .values(${2:values})", "  .returningAll()", "  .executeTakeFirstOrThrow()"]
  },
  "Kysely select from": {
    "prefix": ["kysely_select_from", "selectFrom"],
    "scope": "javascript,typescript",
    "body": ["await db", "  .selectFrom('${1:table} as ${2:alias}')", "  .selectAll('${2:alias}')", "  .innerJoin('${3:table} as ${4:alias}', '${2:alias}.${5:column}', '${4:alias}.${6:column}')", "  .where('${4:alias}.${6:column}', '=', ${7:value})", "  .executeTakeFirst()"]
  },
  "Kysely update table": {
    "prefix": ["kysely_update_table", "updateTable"],
    "scope": "javascript,typescript",
    "body": ["await db", "  .updateTable('${1:table}')", "  .where('${2:column}', '=', ${3:value})", "  .set({ ${4:column}: ${5:value} })", "  .execute()"]
  },
  "Kysely delete from": {
    "prefix": ["kysely_delete_from", "deleteFrom"],
    "scope": "javascript,typescript",
    "body": ["await db", "  .deleteFrom('${1:table}')", "  .where('${2:column}', '=', ${3:value})", "  .returningAll()", "  .execute()"]
  }
}
